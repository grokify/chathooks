// Code generated by qtc from "remark_template.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line remark_template.qtpl:1
package markdown

//line remark_template.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line remark_template.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line remark_template.qtpl:1
func StreamRemarkHTML(qw422016 *qt422016.Writer, data PresentationData) {
//line remark_template.qtpl:1
	qw422016.N().S(`<!DOCTYPE html>
<html>
  <head>
    <title>RingCentral Polling and Syncing</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <script src="./remark-0.4.2.min.js" type="text/javascript">
      {"highlightStyle": "monokai",
       "highlightLanguage": "ruby" }
    </script>
    <style type="text/css" media="screen">
      body {
        font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; 
        font-weight: 400;
      }
      h1, h2, h3 {
        font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; 
        font-weight: 400;
        margin: 5px;
      }
      h1 { font-size: 3.5em; }
      h2 { font-size: 2.3em; }
      h3 { font-size: 1.6em; }
      body { font-size: 0.8em; }
      code { font-size:0.7em; }
      .slide .content {
        padding: 10px 90px !important;
      }
      #slideshow .no-highlight {
        font-size: 0.7em !important;
      }
      blockquote {
        font-style: italic;
        margin: 0.25em 0;
        padding: 0.25em 40px;
        line-height: 1.45;
        position: relative;
      }
      blockquote:before {
        opacity: 0.8;
        display: block;
        content: "\201C";
        font-size: 3em;
        position: absolute;
        left: -20px;
        top: -20px;
      }
      blockquote cite {
        opacity: 0.8;
        font-size: 1em;
        display: block;
        margin-top: 5px;
      }
 
      blockquote cite:before {
        content: "\2014 \2009";
      }
     /* Two-column layout */
    .left-column {
      width: 50%;
      float: left;
    }
    .right-column {
      width: 50%;
      float: right;
    }
    code {
      -moz-border-radius: 5px;
      -web-border-radius: 5px;
      background: #e7e8e2;
      border-radius: 5px;
    }
    .inverse {
      /*background: #272822;*/
      background: #0073ae;
    }
    .inverse h1, .inverse h2, .inverse h3, .inverse h4, .inverse p, .inverse li {
      color: #f3f3f3;
      /*line-height: 0.8em;*/
    }
    .inverse a {
      color: cyan;
    }
    /* slides */
    .bg-section {
      background: #272822;
      font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif; 
      font-weight: 400;
    }
    .bg-section p {
      font-size: 2em;
    }
    .bg {
      background-size: 100%;
      background-repeat: no-repeat;
      background-position: center center;
    }
    .github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}

    a{text-decoration:none;color:#666}
    a:visited{text-decoration:none;color:#666}
    
    </style>
  </head>
  <body>
	<textarea id="source">

`)
//line remark_template.qtpl:107
	for i, slideInfo := range data.Slides {
//line remark_template.qtpl:107
		qw422016.N().S(`
`)
//line remark_template.qtpl:108
		qw422016.N().S(slideInfo.ToRemarkString())
//line remark_template.qtpl:108
		qw422016.N().S(`
`)
//line remark_template.qtpl:109
		if i < len(data.Slides)-1 {
//line remark_template.qtpl:109
			qw422016.N().S(`
        
---

`)
//line remark_template.qtpl:113
		}
//line remark_template.qtpl:113
		qw422016.N().S(`
`)
//line remark_template.qtpl:114
	}
//line remark_template.qtpl:114
	qw422016.N().S(`
	
    </textarea>
    <div id="slideshow"></div>
  </body>
</html>
`)
//line remark_template.qtpl:120
}

//line remark_template.qtpl:120
func WriteRemarkHTML(qq422016 qtio422016.Writer, data PresentationData) {
//line remark_template.qtpl:120
	qw422016 := qt422016.AcquireWriter(qq422016)
//line remark_template.qtpl:120
	StreamRemarkHTML(qw422016, data)
//line remark_template.qtpl:120
	qt422016.ReleaseWriter(qw422016)
//line remark_template.qtpl:120
}

//line remark_template.qtpl:120
func RemarkHTML(data PresentationData) string {
//line remark_template.qtpl:120
	qb422016 := qt422016.AcquireByteBuffer()
//line remark_template.qtpl:120
	WriteRemarkHTML(qb422016, data)
//line remark_template.qtpl:120
	qs422016 := string(qb422016.B)
//line remark_template.qtpl:120
	qt422016.ReleaseByteBuffer(qb422016)
//line remark_template.qtpl:120
	return qs422016
//line remark_template.qtpl:120
}
